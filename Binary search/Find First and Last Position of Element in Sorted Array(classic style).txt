//https://leetcode.com/problems/find-first-and-last-position-of-element-in-sorted-array/

class Solution {
public:
    vector<int> searchRange(vector<int>& nums, int target) {
        
        vector<int> res(2,-1);
        
        
        int left=0,right=nums.size()-1;
        while(left<=right)
        {
            
            int middle = left + (right-left)/2;
            if(nums[middle]<target)
                left=middle+1;
            else if(nums[middle]>target)
                right=middle-1;
            else 
            {
                if(middle==left || nums[middle]!=nums[middle-1])
                {res[0]=middle;break;}
                else
                {
                    res[0] = middle-1;
                    right=middle-1;
                }
            }
        }
        
        left=0,right=nums.size()-1;
        while(left<=right)
        {
            
            int middle = left + (right-left)/2;
            if(nums[middle]<target)
                left=middle+1;
            else if(nums[middle]>target)
                right=middle-1;
            else 
            {
                if(middle==right || nums[middle]!=nums[middle+1])
                {res[1]=middle;break;}
                else
                {
                    res[1] = middle+1;
                    left=middle+1;
                }
            }
        }
        
        
        return res;
    }
};