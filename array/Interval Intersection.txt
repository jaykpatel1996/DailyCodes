//https://leetcode.com/problems/interval-list-intersections/


class Solution {
public:
    vector<vector<int>> intervalIntersection(vector<vector<int>>& A, vector<vector<int>>& B) 
    {
        int i=0,j=0;
        vector<int> temp(2,0);
        vector<vector<int> > res;
        while(i<A.size() && j<B.size())
        {
            if(A[i][1]<B[j][0])
                {i++;continue;}
            if(A[i][0]>B[j][1])
                {j++;continue;}
            
            if(A[i][0]>=B[j][0] && A[i][0]<=B[j][1])
                {
                    temp[0]=A[i][0];
                    temp[1]=min(B[j][1],A[i][1]);
                    res.push_back(temp);
                
                    if(A[i][1]>B[j][1])
                        j++;
                    else
                        i++;
                }
            else if(B[j][0]>=A[i][0] && B[j][0]<=A[i][1])
            {
                    temp[0]=B[j][0];
                    temp[1]=min(A[i][1],B[j][1]);
                    res.push_back(temp);
                
                    if(A[i][1]>B[j][1])
                        j++;
                    else
                        i++;
                
            }
        }
        return res;
    }
};